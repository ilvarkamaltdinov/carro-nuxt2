map $sent_http_content_type $expires {
    "text/html" epoch;
    "text/html; charset=utf-8"  epoch;
    default off;
}
# Редиректим HTTP на HTTPS
server {
       listen         80;
       listen    [::]:80;
       server_name    *.carro.ru;
       return         301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    root /app_nuxt;
    server_name carro.ru *.carro.ru; # домен или ip сервера
    ssl_certificate       /etc/nginx/ssl/carro.ru.crt;
    ssl_certificate_key   /etc/nginx/ssl/carro.ru.key;
    ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

    gzip on;
    gzip_types  text/plain application/xml text/css application/javascript;
    gzip_min_length 1000;

    if ($host ~* www\.(.*)) {
      set $host_without_www $1;
      rewrite ^(.*)$ https://$host_without_www$1 permanent;
    }

    rewrite ^/(.*)/$ /$1 permanent;

    location / {
        expires $expires;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout 1m;
        proxy_connect_timeout 1m;
        # Адрес нашего приложения, так как контейнеры связаны при помощи
        # docker-compose мы можем обращаться к ним по имени контейнера, в данном случае nuxt_app
        proxy_pass http://nuxt:3000;
    }
}
